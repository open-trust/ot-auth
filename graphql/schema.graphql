type OTDomain {
  id: ID!
  createdAt: Int! @dgraph(pred: "OT.createdAt")
  updatedAt: Int! @dgraph(pred: "OT.updatedAt")
  domain: String! @id @search(by: [hash, term, regexp]) @dgraph(pred: "OT.domain") # 联盟方可信域名
  description: String! @dgraph(pred: "OT.description")
  allowedServices: [OTService!]! @dgraph(pred: "OT.allowedServices")
  status: Int! @dgraph(pred: "OT.status") # 联盟关系状态，0: 信任, -1: 取消了联盟关系
}

type OTService {
  id: ID!
  createdAt: Int! @dgraph(pred: "OT.createdAt")
  updatedAt: Int! @dgraph(pred: "OT.updatedAt")
  subjectId: String! @search(by: [hash, term, regexp]) @dgraph(pred: "OT.subjectId")
  subjectType: String! @search(by: [hash]) @dgraph(pred: "OT.subjectType")
  description: String!  @dgraph(pred: "OT.description")
  keys: [String!] @dgraph(pred: "OT.keys") # 存储的公钥 JWK 数组
  keysUpdatedAt: Int! @dgraph(pred: "OT.keysUpdatedAt") # 存储的公钥更新时间
  status: Int! @dgraph(pred: "OT.status") # 登记状态，-1 表示禁用
  serviceEndpoints: [String!]! @dgraph(pred: "OT.serviceEndpoints")
  permissions: [OTServicePermission!] @dgraph(pred: "~OT.serviceRegistry")
  allowedPatterns: [String!]! @dgraph(pred: "OT.allowedPatterns") # 信任的联盟域的主体白名单，支持 * 匹配
  uk: String! @id @dgraph(pred: "OT.S.UK")  # 联合索引 Base64(BLAKE2b.Sum256(serviceType, serviceID))
}

type OTPermission {
  id: ID!
  createdAt: Int! @dgraph(pred: "OT.createdAt")
  updatedAt: Int! @dgraph(pred: "OT.updatedAt")
  objectType: String! @search(by: [hash]) @dgraph(pred: "OT.OType") # 资源名称
  operation: String! @search(by: [hash]) @dgraph(pred: "OT.op") # 操作名称
  extensions: [String!]! @dgraph(pred: "OT.extensions") # 用于业务自定义逻辑的扩展数据
  toObjects: [OTACObject!]! @dgraph(pred: "OTAC.P-Os")
  service: OTService! @dgraph(pred: "OT.P-S") # 所属的服务类主体
  uk: String! @id @dgraph(pred: "OT.P.UK") # 联合索引 Base64(BLAKE2b.Sum256(serviceType, serviceID, resource))
}

type OTUser {
  id: ID!
  createdAt: Int! @dgraph(pred: "OT.createdAt")
  updatedAt: Int! @dgraph(pred: "OT.updatedAt")
  subjectId: String! @search(by: [hash, term, regexp]) @dgraph(pred: "OT.subjectId")
  subjectType: String! @dgraph(pred: "OT.subjectType")
  description: String!  @dgraph(pred: "OT.description")
  keys: [String!] @dgraph(pred: "OT.keys") # 存储的公钥 JWK 数组
  keysUpdatedAt: Int! @dgraph(pred: "OT.keysUpdatedAt") # 存储的公钥更新时间
  status: Int! @dgraph(pred: "OT.status") # 登记状态，-1 表示禁用
  releaseId: String! @dgraph(pred: "OT.releaseId") # 用户类可信主体登记的可信发布标识
  bundles: [OTUserBundle!] @dgraph(pred: "~OT.B-U") # 绑定的第三方 ID 数组
  uk: String! @id @dgraph(pred: "OT.U.UK") # 联合索引 Base64(BLAKE2b.Sum256(userType, userID))
}

type OTUserBundle {
  id: ID!
  createdAt: Int! @dgraph(pred: "OT.createdAt")
  updatedAt: Int! @dgraph(pred: "OT.updatedAt")
  service: OTService! @dgraph(pred: "OT.B-S") # 绑定的第三方 ID 服务提供方
  user: OTUser! @dgraph(pred: "OT.B-U") # 所属的用户类主体
  bundleId: String! @search(by: [hash, term, regexp]) @dgraph(pred: "OT.bundleId") # 绑定的第三方 ID
  extension: String! @dgraph(pred: "OT.extension")
  uk: String! @id @dgraph(pred: "OT.B.UK") # 联合索引 Base64(BLAKE2b.Sum256(serviceType, serviceID, bundleId))
}
