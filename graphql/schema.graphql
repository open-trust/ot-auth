type DomainFederation {
  id: ID!
  createdAt: Int! @dgraph(pred: "createdAt")
  updatedAt: Int! @dgraph(pred: "updatedAt")
  domain: String! @id @search(by: [hash, term, regexp]) @dgraph(pred: "domain") # 联盟方可信域名
  description: String! @dgraph(pred: "description")
  allowedList: [String!]! @dgraph(pred: "allowedList") # state > 0 的情况下有效，信任的联盟域的主体白名单，支持 * 匹配
  status: Int! @dgraph(pred: "status") # 联盟关系状态，0: 被信任 -> domain, 1: 信任 <- domain, 2: 双向信任 <-> domain, -1: 取消了联盟关系
}

type ServiceRegistry {
  id: ID!
  createdAt: Int! @dgraph(pred: "createdAt")
  updatedAt: Int! @dgraph(pred: "updatedAt")
  subjectId: String! @search(by: [hash, term, regexp]) @dgraph(pred: "subjectId")
  subjectType: String! @search(by: [hash]) @dgraph(pred: "subjectType")
  description: String!  @dgraph(pred: "description")
  keys: [String!] @dgraph(pred: "keys") # 存储的公钥 JWK 数组
  keysUpdatedAt: Int! @dgraph(pred: "keysUpdatedAt") # 存储的公钥更新时间
  status: Int! @dgraph(pred: "status") # 登记状态，-1 表示禁用
  serviceEndpoints: [String!]! @dgraph(pred: "serviceEndpoints")
  permissions: [ServiceRegistryPermission!] @dgraph(pred: "~serviceRegistry")
  uk: String! @id @dgraph(pred: "serviceUK")  # 联合索引 Base64(BLAKE2b.Sum256(serviceType, serviceID))
}

type ServiceRegistryPermission {
  id: ID!
  createdAt: Int! @dgraph(pred: "createdAt")
  updatedAt: Int! @dgraph(pred: "updatedAt")
  resource: String! @search(by: [hash, term, regexp]) @dgraph(pred: "resource") # 资源名称
  operations: [String!]! @search(by: [hash]) @dgraph(pred: "operations") # 操作名称数组
  extensions: [String!]! @dgraph(pred: "extensions") # 用于业务自定义逻辑的扩展数据
  registry: ServiceRegistry! @dgraph(pred: "serviceRegistry") # 所属的服务类主体
  uk: String! @id @dgraph(pred: "permissionUK") # 联合索引 Base64(BLAKE2b.Sum256(serviceType, serviceID, resource))
}

type UserRegistry {
  id: ID!
  createdAt: Int! @dgraph(pred: "createdAt")
  updatedAt: Int! @dgraph(pred: "updatedAt")
  subjectId: String! @search(by: [hash, term, regexp]) @dgraph(pred: "subjectId")
  subjectType: String! @dgraph(pred: "subjectType")
  description: String!  @dgraph(pred: "description")
  keys: [String!] @dgraph(pred: "keys") # 存储的公钥 JWK 数组
  keysUpdatedAt: Int! @dgraph(pred: "keysUpdatedAt") # 存储的公钥更新时间
  status: Int! @dgraph(pred: "status") # 登记状态，-1 表示禁用
  releaseId: String! @dgraph(pred: "releaseId") # 用户类可信主体登记的可信发布标识
  bundles: [UserRegistryBundle!] @dgraph(pred: "~userRegistry") # 绑定的第三方 ID 数组
  uk: String! @id @dgraph(pred: "userUK") # 联合索引 Base64(BLAKE2b.Sum256(userType, userID))
}

type UserRegistryBundle {
  id: ID!
  createdAt: Int! @dgraph(pred: "createdAt")
  updatedAt: Int! @dgraph(pred: "updatedAt")
  provider: ServiceRegistry! @dgraph(pred: "provider") # 绑定的第三方 ID 服务提供方
  bundleId: String! @search(by: [hash, term, regexp]) @dgraph(pred: "bundleId") # 绑定的第三方 ID
  extension: String! @dgraph(pred: "extension")
  registry: UserRegistry! @dgraph(pred: "userRegistry") # 所属的用户类主体
  uk: String! @id @dgraph(pred: "bundleUK") # 联合索引 Base64(BLAKE2b.Sum256(serviceType, serviceID, bundleId))
}
